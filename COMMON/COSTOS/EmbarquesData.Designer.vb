'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace Bis.Sap.Common
    
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("EmbarquesData"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
    Partial Public Class EmbarquesData
        Inherits Global.System.Data.DataSet
        
        Private tablePERIODOACTUAL As PERIODOACTUALDataTable
        
        Private tableEMBARQUESDETALLES As EMBARQUESDETALLESDataTable
        
        Private tableEMBARQUESGASTOS As EMBARQUESGASTOSDataTable
        
        Private tableEMBARQUESORIGEN As EMBARQUESORIGENDataTable
        
        Private tableEMBARQUES As EMBARQUESDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("PERIODOACTUAL")) Is Nothing) Then
                    MyBase.Tables.Add(New PERIODOACTUALDataTable(ds.Tables("PERIODOACTUAL")))
                End If
                If (Not (ds.Tables("EMBARQUESDETALLES")) Is Nothing) Then
                    MyBase.Tables.Add(New EMBARQUESDETALLESDataTable(ds.Tables("EMBARQUESDETALLES")))
                End If
                If (Not (ds.Tables("EMBARQUESGASTOS")) Is Nothing) Then
                    MyBase.Tables.Add(New EMBARQUESGASTOSDataTable(ds.Tables("EMBARQUESGASTOS")))
                End If
                If (Not (ds.Tables("EMBARQUESORIGEN")) Is Nothing) Then
                    MyBase.Tables.Add(New EMBARQUESORIGENDataTable(ds.Tables("EMBARQUESORIGEN")))
                End If
                If (Not (ds.Tables("EMBARQUES")) Is Nothing) Then
                    MyBase.Tables.Add(New EMBARQUESDataTable(ds.Tables("EMBARQUES")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property PERIODOACTUAL() As PERIODOACTUALDataTable
            Get
                Return Me.tablePERIODOACTUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property EMBARQUESDETALLES() As EMBARQUESDETALLESDataTable
            Get
                Return Me.tableEMBARQUESDETALLES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property EMBARQUESGASTOS() As EMBARQUESGASTOSDataTable
            Get
                Return Me.tableEMBARQUESGASTOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property EMBARQUESORIGEN() As EMBARQUESORIGENDataTable
            Get
                Return Me.tableEMBARQUESORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property EMBARQUES() As EMBARQUESDataTable
            Get
                Return Me.tableEMBARQUES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As EmbarquesData = CType(MyBase.Clone,EmbarquesData)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("PERIODOACTUAL")) Is Nothing) Then
                    MyBase.Tables.Add(New PERIODOACTUALDataTable(ds.Tables("PERIODOACTUAL")))
                End If
                If (Not (ds.Tables("EMBARQUESDETALLES")) Is Nothing) Then
                    MyBase.Tables.Add(New EMBARQUESDETALLESDataTable(ds.Tables("EMBARQUESDETALLES")))
                End If
                If (Not (ds.Tables("EMBARQUESGASTOS")) Is Nothing) Then
                    MyBase.Tables.Add(New EMBARQUESGASTOSDataTable(ds.Tables("EMBARQUESGASTOS")))
                End If
                If (Not (ds.Tables("EMBARQUESORIGEN")) Is Nothing) Then
                    MyBase.Tables.Add(New EMBARQUESORIGENDataTable(ds.Tables("EMBARQUESORIGEN")))
                End If
                If (Not (ds.Tables("EMBARQUES")) Is Nothing) Then
                    MyBase.Tables.Add(New EMBARQUESDataTable(ds.Tables("EMBARQUES")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tablePERIODOACTUAL = CType(MyBase.Tables("PERIODOACTUAL"),PERIODOACTUALDataTable)
            If (initTable = true) Then
                If (Not (Me.tablePERIODOACTUAL) Is Nothing) Then
                    Me.tablePERIODOACTUAL.InitVars
                End If
            End If
            Me.tableEMBARQUESDETALLES = CType(MyBase.Tables("EMBARQUESDETALLES"),EMBARQUESDETALLESDataTable)
            If (initTable = true) Then
                If (Not (Me.tableEMBARQUESDETALLES) Is Nothing) Then
                    Me.tableEMBARQUESDETALLES.InitVars
                End If
            End If
            Me.tableEMBARQUESGASTOS = CType(MyBase.Tables("EMBARQUESGASTOS"),EMBARQUESGASTOSDataTable)
            If (initTable = true) Then
                If (Not (Me.tableEMBARQUESGASTOS) Is Nothing) Then
                    Me.tableEMBARQUESGASTOS.InitVars
                End If
            End If
            Me.tableEMBARQUESORIGEN = CType(MyBase.Tables("EMBARQUESORIGEN"),EMBARQUESORIGENDataTable)
            If (initTable = true) Then
                If (Not (Me.tableEMBARQUESORIGEN) Is Nothing) Then
                    Me.tableEMBARQUESORIGEN.InitVars
                End If
            End If
            Me.tableEMBARQUES = CType(MyBase.Tables("EMBARQUES"),EMBARQUESDataTable)
            If (initTable = true) Then
                If (Not (Me.tableEMBARQUES) Is Nothing) Then
                    Me.tableEMBARQUES.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "EmbarquesData"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/EmbarquesData.xsd"
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tablePERIODOACTUAL = New PERIODOACTUALDataTable()
            MyBase.Tables.Add(Me.tablePERIODOACTUAL)
            Me.tableEMBARQUESDETALLES = New EMBARQUESDETALLESDataTable()
            MyBase.Tables.Add(Me.tableEMBARQUESDETALLES)
            Me.tableEMBARQUESGASTOS = New EMBARQUESGASTOSDataTable()
            MyBase.Tables.Add(Me.tableEMBARQUESGASTOS)
            Me.tableEMBARQUESORIGEN = New EMBARQUESORIGENDataTable()
            MyBase.Tables.Add(Me.tableEMBARQUESORIGEN)
            Me.tableEMBARQUES = New EMBARQUESDataTable()
            MyBase.Tables.Add(Me.tableEMBARQUES)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function ShouldSerializePERIODOACTUAL() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function ShouldSerializeEMBARQUESDETALLES() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function ShouldSerializeEMBARQUESGASTOS() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function ShouldSerializeEMBARQUESORIGEN() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function ShouldSerializeEMBARQUES() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As EmbarquesData = New EmbarquesData()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Delegate Sub PERIODOACTUALRowChangeEventHandler(ByVal sender As Object, ByVal e As PERIODOACTUALRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Delegate Sub EMBARQUESDETALLESRowChangeEventHandler(ByVal sender As Object, ByVal e As EMBARQUESDETALLESRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Delegate Sub EMBARQUESGASTOSRowChangeEventHandler(ByVal sender As Object, ByVal e As EMBARQUESGASTOSRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Delegate Sub EMBARQUESORIGENRowChangeEventHandler(ByVal sender As Object, ByVal e As EMBARQUESORIGENRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Delegate Sub EMBARQUESRowChangeEventHandler(ByVal sender As Object, ByVal e As EMBARQUESRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class PERIODOACTUALDataTable
            Inherits Global.System.Data.TypedTableBase(Of PERIODOACTUALRow)
            
            Private columnPAIS_CLAVE As Global.System.Data.DataColumn
            
            Private columnPERIODO_ANTERIOR As Global.System.Data.DataColumn
            
            Private columnFISCALYEAR_ANTERIOR As Global.System.Data.DataColumn
            
            Private columnFECHA_CIERRE As Global.System.Data.DataColumn
            
            Private columnPERIODO As Global.System.Data.DataColumn
            
            Private columnFISCAL_YEAR As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "PERIODOACTUAL"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PAIS_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPAIS_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PERIODO_ANTERIORColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPERIODO_ANTERIOR
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property FISCALYEAR_ANTERIORColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnFISCALYEAR_ANTERIOR
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property FECHA_CIERREColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnFECHA_CIERRE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PERIODOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPERIODO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property FISCAL_YEARColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnFISCAL_YEAR
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As PERIODOACTUALRow
                Get
                    Return CType(Me.Rows(index),PERIODOACTUALRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event PERIODOACTUALRowChanging As PERIODOACTUALRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event PERIODOACTUALRowChanged As PERIODOACTUALRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event PERIODOACTUALRowDeleting As PERIODOACTUALRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event PERIODOACTUALRowDeleted As PERIODOACTUALRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Sub AddPERIODOACTUALRow(ByVal row As PERIODOACTUALRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Function AddPERIODOACTUALRow(ByVal PAIS_CLAVE As Decimal, ByVal PERIODO_ANTERIOR As String, ByVal FISCALYEAR_ANTERIOR As Short, ByVal FECHA_CIERRE As Date, ByVal PERIODO As String, ByVal FISCAL_YEAR As Short) As PERIODOACTUALRow
                Dim rowPERIODOACTUALRow As PERIODOACTUALRow = CType(Me.NewRow,PERIODOACTUALRow)
                Dim columnValuesArray() As Object = New Object() {PAIS_CLAVE, PERIODO_ANTERIOR, FISCALYEAR_ANTERIOR, FECHA_CIERRE, PERIODO, FISCAL_YEAR}
                rowPERIODOACTUALRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowPERIODOACTUALRow)
                Return rowPERIODOACTUALRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function FindByPAIS_CLAVE(ByVal PAIS_CLAVE As Decimal) As PERIODOACTUALRow
                Return CType(Me.Rows.Find(New Object() {PAIS_CLAVE}),PERIODOACTUALRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As PERIODOACTUALDataTable = CType(MyBase.Clone,PERIODOACTUALDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New PERIODOACTUALDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnPAIS_CLAVE = MyBase.Columns("PAIS_CLAVE")
                Me.columnPERIODO_ANTERIOR = MyBase.Columns("PERIODO_ANTERIOR")
                Me.columnFISCALYEAR_ANTERIOR = MyBase.Columns("FISCALYEAR_ANTERIOR")
                Me.columnFECHA_CIERRE = MyBase.Columns("FECHA_CIERRE")
                Me.columnPERIODO = MyBase.Columns("PERIODO")
                Me.columnFISCAL_YEAR = MyBase.Columns("FISCAL_YEAR")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Sub InitClass()
                Me.columnPAIS_CLAVE = New Global.System.Data.DataColumn("PAIS_CLAVE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPAIS_CLAVE)
                Me.columnPERIODO_ANTERIOR = New Global.System.Data.DataColumn("PERIODO_ANTERIOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPERIODO_ANTERIOR)
                Me.columnFISCALYEAR_ANTERIOR = New Global.System.Data.DataColumn("FISCALYEAR_ANTERIOR", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnFISCALYEAR_ANTERIOR)
                Me.columnFECHA_CIERRE = New Global.System.Data.DataColumn("FECHA_CIERRE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnFECHA_CIERRE)
                Me.columnPERIODO = New Global.System.Data.DataColumn("PERIODO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPERIODO)
                Me.columnFISCAL_YEAR = New Global.System.Data.DataColumn("FISCAL_YEAR", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnFISCAL_YEAR)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPAIS_CLAVE}, true))
                Me.columnPAIS_CLAVE.AllowDBNull = false
                Me.columnPAIS_CLAVE.Unique = true
                Me.columnPERIODO_ANTERIOR.AllowDBNull = false
                Me.columnPERIODO_ANTERIOR.MaxLength = 3
                Me.columnFISCALYEAR_ANTERIOR.AllowDBNull = false
                Me.columnFECHA_CIERRE.AllowDBNull = false
                Me.columnPERIODO.AllowDBNull = false
                Me.columnPERIODO.MaxLength = 3
                Me.columnFISCAL_YEAR.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function NewPERIODOACTUALRow() As PERIODOACTUALRow
                Return CType(Me.NewRow,PERIODOACTUALRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New PERIODOACTUALRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(PERIODOACTUALRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.PERIODOACTUALRowChangedEvent) Is Nothing) Then
                    RaiseEvent PERIODOACTUALRowChanged(Me, New PERIODOACTUALRowChangeEvent(CType(e.Row,PERIODOACTUALRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.PERIODOACTUALRowChangingEvent) Is Nothing) Then
                    RaiseEvent PERIODOACTUALRowChanging(Me, New PERIODOACTUALRowChangeEvent(CType(e.Row,PERIODOACTUALRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.PERIODOACTUALRowDeletedEvent) Is Nothing) Then
                    RaiseEvent PERIODOACTUALRowDeleted(Me, New PERIODOACTUALRowChangeEvent(CType(e.Row,PERIODOACTUALRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.PERIODOACTUALRowDeletingEvent) Is Nothing) Then
                    RaiseEvent PERIODOACTUALRowDeleting(Me, New PERIODOACTUALRowChangeEvent(CType(e.Row,PERIODOACTUALRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub RemovePERIODOACTUALRow(ByVal row As PERIODOACTUALRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As EmbarquesData = New EmbarquesData()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "PERIODOACTUALDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class EMBARQUESDETALLESDataTable
            Inherits Global.System.Data.TypedTableBase(Of EMBARQUESDETALLESRow)
            
            Private columnEMBARQUE_CLAVE As Global.System.Data.DataColumn
            
            Private columnPRO_CLAVE As Global.System.Data.DataColumn
            
            Private columnPRO_GRAMAJ As Global.System.Data.DataColumn
            
            Private columnPRO_DESCRI As Global.System.Data.DataColumn
            
            Private columnDMP_CANTID As Global.System.Data.DataColumn
            
            Private columnDMP_PRECIO As Global.System.Data.DataColumn
            
            Private columnSAP_NUM_MATERIAL_LEGADO As Global.System.Data.DataColumn
            
            Private columnPFOB As Global.System.Data.DataColumn
            
            Private columnAVG_FLETE As Global.System.Data.DataColumn
            
            Private columnAVG_SEGUROS As Global.System.Data.DataColumn
            
            Private columnAVG_OG As Global.System.Data.DataColumn
            
            Private columnKILOS As Global.System.Data.DataColumn
            
            Private columnML_FPU As Global.System.Data.DataColumn
            
            Private columnML_CIF As Global.System.Data.DataColumn
            
            Private columnML_ARANCEL As Global.System.Data.DataColumn
            
            Private columnML_FLETE As Global.System.Data.DataColumn
            
            Private columnML_HONORARIOS As Global.System.Data.DataColumn
            
            Private columnML_VARIOS As Global.System.Data.DataColumn
            
            Private columnML_TOTAL As Global.System.Data.DataColumn
            
            Private columnML_PU As Global.System.Data.DataColumn
            
            Private columnML_CU As Global.System.Data.DataColumn
            
            Private columnTotalFactura As Global.System.Data.DataColumn
            
            Private columnCU As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "EMBARQUESDETALLES"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property EMBARQUE_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnEMBARQUE_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PRO_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPRO_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PRO_GRAMAJColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPRO_GRAMAJ
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PRO_DESCRIColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPRO_DESCRI
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DMP_CANTIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDMP_CANTID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DMP_PRECIOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDMP_PRECIO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SAP_NUM_MATERIAL_LEGADOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSAP_NUM_MATERIAL_LEGADO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PFOBColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPFOB
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property AVG_FLETEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAVG_FLETE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property AVG_SEGUROSColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAVG_SEGUROS
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property AVG_OGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAVG_OG
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property KILOSColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnKILOS
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ML_FPUColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnML_FPU
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ML_CIFColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnML_CIF
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ML_ARANCELColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnML_ARANCEL
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ML_FLETEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnML_FLETE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ML_HONORARIOSColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnML_HONORARIOS
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ML_VARIOSColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnML_VARIOS
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ML_TOTALColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnML_TOTAL
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ML_PUColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnML_PU
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ML_CUColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnML_CU
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property TotalFacturaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTotalFactura
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CUColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCU
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As EMBARQUESDETALLESRow
                Get
                    Return CType(Me.Rows(index),EMBARQUESDETALLESRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESDETALLESRowChanging As EMBARQUESDETALLESRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESDETALLESRowChanged As EMBARQUESDETALLESRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESDETALLESRowDeleting As EMBARQUESDETALLESRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESDETALLESRowDeleted As EMBARQUESDETALLESRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Sub AddEMBARQUESDETALLESRow(ByVal row As EMBARQUESDETALLESRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Function AddEMBARQUESDETALLESRow( _
                        ByVal EMBARQUE_CLAVE As String,  _
                        ByVal PRO_CLAVE As String,  _
                        ByVal PRO_GRAMAJ As Decimal,  _
                        ByVal PRO_DESCRI As String,  _
                        ByVal DMP_CANTID As Decimal,  _
                        ByVal DMP_PRECIO As Decimal,  _
                        ByVal SAP_NUM_MATERIAL_LEGADO As String,  _
                        ByVal PFOB As Decimal,  _
                        ByVal AVG_FLETE As Decimal,  _
                        ByVal AVG_SEGUROS As Decimal,  _
                        ByVal AVG_OG As Decimal,  _
                        ByVal KILOS As Decimal,  _
                        ByVal ML_FPU As Decimal,  _
                        ByVal ML_CIF As Decimal,  _
                        ByVal ML_ARANCEL As Decimal,  _
                        ByVal ML_FLETE As Decimal,  _
                        ByVal ML_HONORARIOS As Decimal,  _
                        ByVal ML_VARIOS As Decimal,  _
                        ByVal ML_TOTAL As Decimal,  _
                        ByVal ML_PU As Decimal,  _
                        ByVal ML_CU As Decimal,  _
                        ByVal TotalFactura As Decimal,  _
                        ByVal CU As Decimal) As EMBARQUESDETALLESRow
                Dim rowEMBARQUESDETALLESRow As EMBARQUESDETALLESRow = CType(Me.NewRow,EMBARQUESDETALLESRow)
                Dim columnValuesArray() As Object = New Object() {EMBARQUE_CLAVE, PRO_CLAVE, PRO_GRAMAJ, PRO_DESCRI, DMP_CANTID, DMP_PRECIO, SAP_NUM_MATERIAL_LEGADO, PFOB, AVG_FLETE, AVG_SEGUROS, AVG_OG, KILOS, ML_FPU, ML_CIF, ML_ARANCEL, ML_FLETE, ML_HONORARIOS, ML_VARIOS, ML_TOTAL, ML_PU, ML_CU, TotalFactura, CU}
                rowEMBARQUESDETALLESRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowEMBARQUESDETALLESRow)
                Return rowEMBARQUESDETALLESRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As EMBARQUESDETALLESDataTable = CType(MyBase.Clone,EMBARQUESDETALLESDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New EMBARQUESDETALLESDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnEMBARQUE_CLAVE = MyBase.Columns("EMBARQUE_CLAVE")
                Me.columnPRO_CLAVE = MyBase.Columns("PRO_CLAVE")
                Me.columnPRO_GRAMAJ = MyBase.Columns("PRO_GRAMAJ")
                Me.columnPRO_DESCRI = MyBase.Columns("PRO_DESCRI")
                Me.columnDMP_CANTID = MyBase.Columns("DMP_CANTID")
                Me.columnDMP_PRECIO = MyBase.Columns("DMP_PRECIO")
                Me.columnSAP_NUM_MATERIAL_LEGADO = MyBase.Columns("SAP_NUM_MATERIAL_LEGADO")
                Me.columnPFOB = MyBase.Columns("PFOB")
                Me.columnAVG_FLETE = MyBase.Columns("AVG_FLETE")
                Me.columnAVG_SEGUROS = MyBase.Columns("AVG_SEGUROS")
                Me.columnAVG_OG = MyBase.Columns("AVG_OG")
                Me.columnKILOS = MyBase.Columns("KILOS")
                Me.columnML_FPU = MyBase.Columns("ML_FPU")
                Me.columnML_CIF = MyBase.Columns("ML_CIF")
                Me.columnML_ARANCEL = MyBase.Columns("ML_ARANCEL")
                Me.columnML_FLETE = MyBase.Columns("ML_FLETE")
                Me.columnML_HONORARIOS = MyBase.Columns("ML_HONORARIOS")
                Me.columnML_VARIOS = MyBase.Columns("ML_VARIOS")
                Me.columnML_TOTAL = MyBase.Columns("ML_TOTAL")
                Me.columnML_PU = MyBase.Columns("ML_PU")
                Me.columnML_CU = MyBase.Columns("ML_CU")
                Me.columnTotalFactura = MyBase.Columns("TotalFactura")
                Me.columnCU = MyBase.Columns("CU")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Sub InitClass()
                Me.columnEMBARQUE_CLAVE = New Global.System.Data.DataColumn("EMBARQUE_CLAVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnEMBARQUE_CLAVE)
                Me.columnPRO_CLAVE = New Global.System.Data.DataColumn("PRO_CLAVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPRO_CLAVE)
                Me.columnPRO_GRAMAJ = New Global.System.Data.DataColumn("PRO_GRAMAJ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPRO_GRAMAJ)
                Me.columnPRO_DESCRI = New Global.System.Data.DataColumn("PRO_DESCRI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPRO_DESCRI)
                Me.columnDMP_CANTID = New Global.System.Data.DataColumn("DMP_CANTID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDMP_CANTID)
                Me.columnDMP_PRECIO = New Global.System.Data.DataColumn("DMP_PRECIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDMP_PRECIO)
                Me.columnSAP_NUM_MATERIAL_LEGADO = New Global.System.Data.DataColumn("SAP_NUM_MATERIAL_LEGADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSAP_NUM_MATERIAL_LEGADO)
                Me.columnPFOB = New Global.System.Data.DataColumn("PFOB", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPFOB)
                Me.columnAVG_FLETE = New Global.System.Data.DataColumn("AVG_FLETE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAVG_FLETE)
                Me.columnAVG_SEGUROS = New Global.System.Data.DataColumn("AVG_SEGUROS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAVG_SEGUROS)
                Me.columnAVG_OG = New Global.System.Data.DataColumn("AVG_OG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAVG_OG)
                Me.columnKILOS = New Global.System.Data.DataColumn("KILOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnKILOS)
                Me.columnML_FPU = New Global.System.Data.DataColumn("ML_FPU", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnML_FPU)
                Me.columnML_CIF = New Global.System.Data.DataColumn("ML_CIF", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnML_CIF)
                Me.columnML_ARANCEL = New Global.System.Data.DataColumn("ML_ARANCEL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnML_ARANCEL)
                Me.columnML_FLETE = New Global.System.Data.DataColumn("ML_FLETE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnML_FLETE)
                Me.columnML_HONORARIOS = New Global.System.Data.DataColumn("ML_HONORARIOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnML_HONORARIOS)
                Me.columnML_VARIOS = New Global.System.Data.DataColumn("ML_VARIOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnML_VARIOS)
                Me.columnML_TOTAL = New Global.System.Data.DataColumn("ML_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnML_TOTAL)
                Me.columnML_PU = New Global.System.Data.DataColumn("ML_PU", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnML_PU)
                Me.columnML_CU = New Global.System.Data.DataColumn("ML_CU", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnML_CU)
                Me.columnTotalFactura = New Global.System.Data.DataColumn("TotalFactura", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTotalFactura)
                Me.columnCU = New Global.System.Data.DataColumn("CU", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCU)
                Me.columnEMBARQUE_CLAVE.MaxLength = 35
                Me.columnPRO_CLAVE.AllowDBNull = false
                Me.columnPRO_CLAVE.MaxLength = 10
                Me.columnPRO_GRAMAJ.AllowDBNull = false
                Me.columnPRO_DESCRI.AllowDBNull = false
                Me.columnPRO_DESCRI.MaxLength = 50
                Me.columnDMP_CANTID.AllowDBNull = false
                Me.columnDMP_PRECIO.AllowDBNull = false
                Me.columnSAP_NUM_MATERIAL_LEGADO.AllowDBNull = false
                Me.columnSAP_NUM_MATERIAL_LEGADO.MaxLength = 18
                Me.columnKILOS.DefaultValue = CType(0,Decimal)
                Me.columnTotalFactura.DefaultValue = CType(0,Decimal)
                Me.columnCU.DefaultValue = CType(0,Decimal)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function NewEMBARQUESDETALLESRow() As EMBARQUESDETALLESRow
                Return CType(Me.NewRow,EMBARQUESDETALLESRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New EMBARQUESDETALLESRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(EMBARQUESDETALLESRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.EMBARQUESDETALLESRowChangedEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESDETALLESRowChanged(Me, New EMBARQUESDETALLESRowChangeEvent(CType(e.Row,EMBARQUESDETALLESRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.EMBARQUESDETALLESRowChangingEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESDETALLESRowChanging(Me, New EMBARQUESDETALLESRowChangeEvent(CType(e.Row,EMBARQUESDETALLESRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.EMBARQUESDETALLESRowDeletedEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESDETALLESRowDeleted(Me, New EMBARQUESDETALLESRowChangeEvent(CType(e.Row,EMBARQUESDETALLESRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.EMBARQUESDETALLESRowDeletingEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESDETALLESRowDeleting(Me, New EMBARQUESDETALLESRowChangeEvent(CType(e.Row,EMBARQUESDETALLESRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub RemoveEMBARQUESDETALLESRow(ByVal row As EMBARQUESDETALLESRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As EmbarquesData = New EmbarquesData()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "EMBARQUESDETALLESDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class EMBARQUESGASTOSDataTable
            Inherits Global.System.Data.TypedTableBase(Of EMBARQUESGASTOSRow)
            
            Private columnEMBARQUE_CLAVE As Global.System.Data.DataColumn
            
            Private columnG_CLAVE As Global.System.Data.DataColumn
            
            Private columnMONTO As Global.System.Data.DataColumn
            
            Private columnNOMBRE As Global.System.Data.DataColumn
            
            Private columnNIVEL As Global.System.Data.DataColumn
            
            Private columnTIPO As Global.System.Data.DataColumn
            
            Private columnCLASE As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "EMBARQUESGASTOS"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property EMBARQUE_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnEMBARQUE_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property G_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnG_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MONTOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMONTO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNOMBRE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property NIVELColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNIVEL
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property TIPOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTIPO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CLASEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCLASE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As EMBARQUESGASTOSRow
                Get
                    Return CType(Me.Rows(index),EMBARQUESGASTOSRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESGASTOSRowChanging As EMBARQUESGASTOSRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESGASTOSRowChanged As EMBARQUESGASTOSRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESGASTOSRowDeleting As EMBARQUESGASTOSRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESGASTOSRowDeleted As EMBARQUESGASTOSRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Sub AddEMBARQUESGASTOSRow(ByVal row As EMBARQUESGASTOSRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Function AddEMBARQUESGASTOSRow(ByVal EMBARQUE_CLAVE As String, ByVal G_CLAVE As Decimal, ByVal MONTO As Decimal, ByVal NOMBRE As String, ByVal NIVEL As Short, ByVal TIPO As Short, ByVal CLASE As Decimal) As EMBARQUESGASTOSRow
                Dim rowEMBARQUESGASTOSRow As EMBARQUESGASTOSRow = CType(Me.NewRow,EMBARQUESGASTOSRow)
                Dim columnValuesArray() As Object = New Object() {EMBARQUE_CLAVE, G_CLAVE, MONTO, NOMBRE, NIVEL, TIPO, CLASE}
                rowEMBARQUESGASTOSRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowEMBARQUESGASTOSRow)
                Return rowEMBARQUESGASTOSRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As EMBARQUESGASTOSDataTable = CType(MyBase.Clone,EMBARQUESGASTOSDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New EMBARQUESGASTOSDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnEMBARQUE_CLAVE = MyBase.Columns("EMBARQUE_CLAVE")
                Me.columnG_CLAVE = MyBase.Columns("G_CLAVE")
                Me.columnMONTO = MyBase.Columns("MONTO")
                Me.columnNOMBRE = MyBase.Columns("NOMBRE")
                Me.columnNIVEL = MyBase.Columns("NIVEL")
                Me.columnTIPO = MyBase.Columns("TIPO")
                Me.columnCLASE = MyBase.Columns("CLASE")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Sub InitClass()
                Me.columnEMBARQUE_CLAVE = New Global.System.Data.DataColumn("EMBARQUE_CLAVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnEMBARQUE_CLAVE)
                Me.columnG_CLAVE = New Global.System.Data.DataColumn("G_CLAVE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnG_CLAVE)
                Me.columnMONTO = New Global.System.Data.DataColumn("MONTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMONTO)
                Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNOMBRE)
                Me.columnNIVEL = New Global.System.Data.DataColumn("NIVEL", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNIVEL)
                Me.columnTIPO = New Global.System.Data.DataColumn("TIPO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTIPO)
                Me.columnCLASE = New Global.System.Data.DataColumn("CLASE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCLASE)
                Me.columnEMBARQUE_CLAVE.AllowDBNull = false
                Me.columnEMBARQUE_CLAVE.MaxLength = 35
                Me.columnG_CLAVE.AllowDBNull = false
                Me.columnMONTO.AllowDBNull = false
                Me.columnNOMBRE.AllowDBNull = false
                Me.columnNOMBRE.MaxLength = 40
                Me.columnNIVEL.AllowDBNull = false
                Me.columnTIPO.AllowDBNull = false
                Me.columnCLASE.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function NewEMBARQUESGASTOSRow() As EMBARQUESGASTOSRow
                Return CType(Me.NewRow,EMBARQUESGASTOSRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New EMBARQUESGASTOSRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(EMBARQUESGASTOSRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.EMBARQUESGASTOSRowChangedEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESGASTOSRowChanged(Me, New EMBARQUESGASTOSRowChangeEvent(CType(e.Row,EMBARQUESGASTOSRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.EMBARQUESGASTOSRowChangingEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESGASTOSRowChanging(Me, New EMBARQUESGASTOSRowChangeEvent(CType(e.Row,EMBARQUESGASTOSRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.EMBARQUESGASTOSRowDeletedEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESGASTOSRowDeleted(Me, New EMBARQUESGASTOSRowChangeEvent(CType(e.Row,EMBARQUESGASTOSRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.EMBARQUESGASTOSRowDeletingEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESGASTOSRowDeleting(Me, New EMBARQUESGASTOSRowChangeEvent(CType(e.Row,EMBARQUESGASTOSRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub RemoveEMBARQUESGASTOSRow(ByVal row As EMBARQUESGASTOSRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As EmbarquesData = New EmbarquesData()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "EMBARQUESGASTOSDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class EMBARQUESORIGENDataTable
            Inherits Global.System.Data.TypedTableBase(Of EMBARQUESORIGENRow)
            
            Private columnMMP_FOLIO As Global.System.Data.DataColumn
            
            Private columnSUC_CLAVE As Global.System.Data.DataColumn
            
            Private columnMOV_CLAVE As Global.System.Data.DataColumn
            
            Private columnMMP_FECHA As Global.System.Data.DataColumn
            
            Private columnPRO_CLAVE As Global.System.Data.DataColumn
            
            Private columnPRO_DESCRI As Global.System.Data.DataColumn
            
            Private columnPRO_GRAMAJ As Global.System.Data.DataColumn
            
            Private columnPAIS_CLAVE As Global.System.Data.DataColumn
            
            Private columnDMP_CANTID As Global.System.Data.DataColumn
            
            Private columnDMP_PRECIO As Global.System.Data.DataColumn
            
            Private columnPRO_UNIVEN As Global.System.Data.DataColumn
            
            Private columnPRO_UNIMAN As Global.System.Data.DataColumn
            
            Private columnPSU_CLAVE As Global.System.Data.DataColumn
            
            Private columnMMP_NUMCON As Global.System.Data.DataColumn
            
            Private columnMMP_CONCEP As Global.System.Data.DataColumn
            
            Private columnEMBARQUE_CLAVE As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "EMBARQUESORIGEN"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MMP_FOLIOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMMP_FOLIO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SUC_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSUC_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MOV_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMOV_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MMP_FECHAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMMP_FECHA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PRO_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPRO_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PRO_DESCRIColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPRO_DESCRI
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PRO_GRAMAJColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPRO_GRAMAJ
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PAIS_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPAIS_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DMP_CANTIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDMP_CANTID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DMP_PRECIOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDMP_PRECIO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PRO_UNIVENColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPRO_UNIVEN
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PRO_UNIMANColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPRO_UNIMAN
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PSU_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPSU_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MMP_NUMCONColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMMP_NUMCON
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MMP_CONCEPColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMMP_CONCEP
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property EMBARQUE_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnEMBARQUE_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As EMBARQUESORIGENRow
                Get
                    Return CType(Me.Rows(index),EMBARQUESORIGENRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESORIGENRowChanging As EMBARQUESORIGENRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESORIGENRowChanged As EMBARQUESORIGENRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESORIGENRowDeleting As EMBARQUESORIGENRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESORIGENRowDeleted As EMBARQUESORIGENRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Sub AddEMBARQUESORIGENRow(ByVal row As EMBARQUESORIGENRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Function AddEMBARQUESORIGENRow( _
                        ByVal MMP_FOLIO As Long,  _
                        ByVal SUC_CLAVE As Long,  _
                        ByVal MOV_CLAVE As Long,  _
                        ByVal MMP_FECHA As Date,  _
                        ByVal PRO_CLAVE As String,  _
                        ByVal PRO_DESCRI As String,  _
                        ByVal PRO_GRAMAJ As Decimal,  _
                        ByVal PAIS_CLAVE As Long,  _
                        ByVal DMP_CANTID As Decimal,  _
                        ByVal DMP_PRECIO As Double,  _
                        ByVal PRO_UNIVEN As Decimal,  _
                        ByVal PRO_UNIMAN As Decimal,  _
                        ByVal PSU_CLAVE As String,  _
                        ByVal MMP_NUMCON As String,  _
                        ByVal MMP_CONCEP As String,  _
                        ByVal EMBARQUE_CLAVE As String) As EMBARQUESORIGENRow
                Dim rowEMBARQUESORIGENRow As EMBARQUESORIGENRow = CType(Me.NewRow,EMBARQUESORIGENRow)
                Dim columnValuesArray() As Object = New Object() {MMP_FOLIO, SUC_CLAVE, MOV_CLAVE, MMP_FECHA, PRO_CLAVE, PRO_DESCRI, PRO_GRAMAJ, PAIS_CLAVE, DMP_CANTID, DMP_PRECIO, PRO_UNIVEN, PRO_UNIMAN, PSU_CLAVE, MMP_NUMCON, MMP_CONCEP, EMBARQUE_CLAVE}
                rowEMBARQUESORIGENRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowEMBARQUESORIGENRow)
                Return rowEMBARQUESORIGENRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As EMBARQUESORIGENDataTable = CType(MyBase.Clone,EMBARQUESORIGENDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New EMBARQUESORIGENDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnMMP_FOLIO = MyBase.Columns("MMP_FOLIO")
                Me.columnSUC_CLAVE = MyBase.Columns("SUC_CLAVE")
                Me.columnMOV_CLAVE = MyBase.Columns("MOV_CLAVE")
                Me.columnMMP_FECHA = MyBase.Columns("MMP_FECHA")
                Me.columnPRO_CLAVE = MyBase.Columns("PRO_CLAVE")
                Me.columnPRO_DESCRI = MyBase.Columns("PRO_DESCRI")
                Me.columnPRO_GRAMAJ = MyBase.Columns("PRO_GRAMAJ")
                Me.columnPAIS_CLAVE = MyBase.Columns("PAIS_CLAVE")
                Me.columnDMP_CANTID = MyBase.Columns("DMP_CANTID")
                Me.columnDMP_PRECIO = MyBase.Columns("DMP_PRECIO")
                Me.columnPRO_UNIVEN = MyBase.Columns("PRO_UNIVEN")
                Me.columnPRO_UNIMAN = MyBase.Columns("PRO_UNIMAN")
                Me.columnPSU_CLAVE = MyBase.Columns("PSU_CLAVE")
                Me.columnMMP_NUMCON = MyBase.Columns("MMP_NUMCON")
                Me.columnMMP_CONCEP = MyBase.Columns("MMP_CONCEP")
                Me.columnEMBARQUE_CLAVE = MyBase.Columns("EMBARQUE_CLAVE")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Sub InitClass()
                Me.columnMMP_FOLIO = New Global.System.Data.DataColumn("MMP_FOLIO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMMP_FOLIO)
                Me.columnSUC_CLAVE = New Global.System.Data.DataColumn("SUC_CLAVE", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSUC_CLAVE)
                Me.columnMOV_CLAVE = New Global.System.Data.DataColumn("MOV_CLAVE", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMOV_CLAVE)
                Me.columnMMP_FECHA = New Global.System.Data.DataColumn("MMP_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMMP_FECHA)
                Me.columnPRO_CLAVE = New Global.System.Data.DataColumn("PRO_CLAVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPRO_CLAVE)
                Me.columnPRO_DESCRI = New Global.System.Data.DataColumn("PRO_DESCRI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPRO_DESCRI)
                Me.columnPRO_GRAMAJ = New Global.System.Data.DataColumn("PRO_GRAMAJ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPRO_GRAMAJ)
                Me.columnPAIS_CLAVE = New Global.System.Data.DataColumn("PAIS_CLAVE", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPAIS_CLAVE)
                Me.columnDMP_CANTID = New Global.System.Data.DataColumn("DMP_CANTID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDMP_CANTID)
                Me.columnDMP_PRECIO = New Global.System.Data.DataColumn("DMP_PRECIO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDMP_PRECIO)
                Me.columnPRO_UNIVEN = New Global.System.Data.DataColumn("PRO_UNIVEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPRO_UNIVEN)
                Me.columnPRO_UNIMAN = New Global.System.Data.DataColumn("PRO_UNIMAN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPRO_UNIMAN)
                Me.columnPSU_CLAVE = New Global.System.Data.DataColumn("PSU_CLAVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPSU_CLAVE)
                Me.columnMMP_NUMCON = New Global.System.Data.DataColumn("MMP_NUMCON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMMP_NUMCON)
                Me.columnMMP_CONCEP = New Global.System.Data.DataColumn("MMP_CONCEP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMMP_CONCEP)
                Me.columnEMBARQUE_CLAVE = New Global.System.Data.DataColumn("EMBARQUE_CLAVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnEMBARQUE_CLAVE)
                Me.columnMMP_FOLIO.AllowDBNull = false
                Me.columnSUC_CLAVE.AllowDBNull = false
                Me.columnMOV_CLAVE.AllowDBNull = false
                Me.columnMMP_FECHA.AllowDBNull = false
                Me.columnPRO_CLAVE.AllowDBNull = false
                Me.columnPRO_CLAVE.MaxLength = 10
                Me.columnPRO_DESCRI.MaxLength = 50
                Me.columnPAIS_CLAVE.AllowDBNull = false
                Me.columnPSU_CLAVE.MaxLength = 15
                Me.columnMMP_NUMCON.MaxLength = 15
                Me.columnMMP_CONCEP.MaxLength = 50
                Me.columnEMBARQUE_CLAVE.DefaultValue = CType("A",String)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function NewEMBARQUESORIGENRow() As EMBARQUESORIGENRow
                Return CType(Me.NewRow,EMBARQUESORIGENRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New EMBARQUESORIGENRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(EMBARQUESORIGENRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.EMBARQUESORIGENRowChangedEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESORIGENRowChanged(Me, New EMBARQUESORIGENRowChangeEvent(CType(e.Row,EMBARQUESORIGENRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.EMBARQUESORIGENRowChangingEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESORIGENRowChanging(Me, New EMBARQUESORIGENRowChangeEvent(CType(e.Row,EMBARQUESORIGENRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.EMBARQUESORIGENRowDeletedEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESORIGENRowDeleted(Me, New EMBARQUESORIGENRowChangeEvent(CType(e.Row,EMBARQUESORIGENRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.EMBARQUESORIGENRowDeletingEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESORIGENRowDeleting(Me, New EMBARQUESORIGENRowChangeEvent(CType(e.Row,EMBARQUESORIGENRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub RemoveEMBARQUESORIGENRow(ByVal row As EMBARQUESORIGENRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As EmbarquesData = New EmbarquesData()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "EMBARQUESORIGENDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class EMBARQUESDataTable
            Inherits Global.System.Data.TypedTableBase(Of EMBARQUESRow)
            
            Private columnEMBARQUE_CLAVE As Global.System.Data.DataColumn
            
            Private columnMMP_FOLIO As Global.System.Data.DataColumn
            
            Private columnMMP_FECHA As Global.System.Data.DataColumn
            
            Private columnPAIS_CLAVE As Global.System.Data.DataColumn
            
            Private columnSUC_CLAVE As Global.System.Data.DataColumn
            
            Private columnSAP_FISCAL_YEAR As Global.System.Data.DataColumn
            
            Private columnSAP_PERIOD As Global.System.Data.DataColumn
            
            Private columnMOV_CLAVE As Global.System.Data.DataColumn
            
            Private columnSTATUS As Global.System.Data.DataColumn
            
            Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
            
            Private columnFACTURA_NO As Global.System.Data.DataColumn
            
            Private columnFECHA_FACTURA As Global.System.Data.DataColumn
            
            Private columnCONTROL_NO As Global.System.Data.DataColumn
            
            Private columnFECHA_INGRESO As Global.System.Data.DataColumn
            
            Private columnPROVEEDOR_CLAVE As Global.System.Data.DataColumn
            
            Private columnPROVEEDOR_NOMBRE As Global.System.Data.DataColumn
            
            Private columnCONCEPTO As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "EMBARQUES"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property EMBARQUE_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnEMBARQUE_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MMP_FOLIOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMMP_FOLIO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MMP_FECHAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMMP_FECHA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PAIS_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPAIS_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SUC_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSUC_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SAP_FISCAL_YEARColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSAP_FISCAL_YEAR
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SAP_PERIODColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSAP_PERIOD
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MOV_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMOV_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property STATUSColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSTATUS
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTIPO_CAMBIO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property FACTURA_NOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnFACTURA_NO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property FECHA_FACTURAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnFECHA_FACTURA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CONTROL_NOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCONTROL_NO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property FECHA_INGRESOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnFECHA_INGRESO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PROVEEDOR_CLAVEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPROVEEDOR_CLAVE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PROVEEDOR_NOMBREColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPROVEEDOR_NOMBRE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CONCEPTOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCONCEPTO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As EMBARQUESRow
                Get
                    Return CType(Me.Rows(index),EMBARQUESRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESRowChanging As EMBARQUESRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESRowChanged As EMBARQUESRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESRowDeleting As EMBARQUESRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event EMBARQUESRowDeleted As EMBARQUESRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Sub AddEMBARQUESRow(ByVal row As EMBARQUESRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Function AddEMBARQUESRow( _
                        ByVal EMBARQUE_CLAVE As String,  _
                        ByVal MMP_FOLIO As Decimal,  _
                        ByVal MMP_FECHA As Date,  _
                        ByVal PAIS_CLAVE As Decimal,  _
                        ByVal SUC_CLAVE As Decimal,  _
                        ByVal SAP_FISCAL_YEAR As Decimal,  _
                        ByVal SAP_PERIOD As String,  _
                        ByVal MOV_CLAVE As Decimal,  _
                        ByVal STATUS As String,  _
                        ByVal TIPO_CAMBIO As Double,  _
                        ByVal FACTURA_NO As String,  _
                        ByVal FECHA_FACTURA As Date,  _
                        ByVal CONTROL_NO As String,  _
                        ByVal FECHA_INGRESO As Date,  _
                        ByVal PROVEEDOR_CLAVE As Decimal,  _
                        ByVal PROVEEDOR_NOMBRE As String,  _
                        ByVal CONCEPTO As String) As EMBARQUESRow
                Dim rowEMBARQUESRow As EMBARQUESRow = CType(Me.NewRow,EMBARQUESRow)
                Dim columnValuesArray() As Object = New Object() {EMBARQUE_CLAVE, MMP_FOLIO, MMP_FECHA, PAIS_CLAVE, SUC_CLAVE, SAP_FISCAL_YEAR, SAP_PERIOD, MOV_CLAVE, STATUS, TIPO_CAMBIO, FACTURA_NO, FECHA_FACTURA, CONTROL_NO, FECHA_INGRESO, PROVEEDOR_CLAVE, PROVEEDOR_NOMBRE, CONCEPTO}
                rowEMBARQUESRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowEMBARQUESRow)
                Return rowEMBARQUESRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function FindByEMBARQUE_CLAVE(ByVal EMBARQUE_CLAVE As String) As EMBARQUESRow
                Return CType(Me.Rows.Find(New Object() {EMBARQUE_CLAVE}),EMBARQUESRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As EMBARQUESDataTable = CType(MyBase.Clone,EMBARQUESDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New EMBARQUESDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnEMBARQUE_CLAVE = MyBase.Columns("EMBARQUE_CLAVE")
                Me.columnMMP_FOLIO = MyBase.Columns("MMP_FOLIO")
                Me.columnMMP_FECHA = MyBase.Columns("MMP_FECHA")
                Me.columnPAIS_CLAVE = MyBase.Columns("PAIS_CLAVE")
                Me.columnSUC_CLAVE = MyBase.Columns("SUC_CLAVE")
                Me.columnSAP_FISCAL_YEAR = MyBase.Columns("SAP_FISCAL_YEAR")
                Me.columnSAP_PERIOD = MyBase.Columns("SAP_PERIOD")
                Me.columnMOV_CLAVE = MyBase.Columns("MOV_CLAVE")
                Me.columnSTATUS = MyBase.Columns("STATUS")
                Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
                Me.columnFACTURA_NO = MyBase.Columns("FACTURA_NO")
                Me.columnFECHA_FACTURA = MyBase.Columns("FECHA_FACTURA")
                Me.columnCONTROL_NO = MyBase.Columns("CONTROL_NO")
                Me.columnFECHA_INGRESO = MyBase.Columns("FECHA_INGRESO")
                Me.columnPROVEEDOR_CLAVE = MyBase.Columns("PROVEEDOR_CLAVE")
                Me.columnPROVEEDOR_NOMBRE = MyBase.Columns("PROVEEDOR_NOMBRE")
                Me.columnCONCEPTO = MyBase.Columns("CONCEPTO")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Sub InitClass()
                Me.columnEMBARQUE_CLAVE = New Global.System.Data.DataColumn("EMBARQUE_CLAVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnEMBARQUE_CLAVE)
                Me.columnMMP_FOLIO = New Global.System.Data.DataColumn("MMP_FOLIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMMP_FOLIO)
                Me.columnMMP_FECHA = New Global.System.Data.DataColumn("MMP_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMMP_FECHA)
                Me.columnPAIS_CLAVE = New Global.System.Data.DataColumn("PAIS_CLAVE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPAIS_CLAVE)
                Me.columnSUC_CLAVE = New Global.System.Data.DataColumn("SUC_CLAVE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSUC_CLAVE)
                Me.columnSAP_FISCAL_YEAR = New Global.System.Data.DataColumn("SAP_FISCAL_YEAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSAP_FISCAL_YEAR)
                Me.columnSAP_PERIOD = New Global.System.Data.DataColumn("SAP_PERIOD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSAP_PERIOD)
                Me.columnMOV_CLAVE = New Global.System.Data.DataColumn("MOV_CLAVE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMOV_CLAVE)
                Me.columnSTATUS = New Global.System.Data.DataColumn("STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSTATUS)
                Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
                Me.columnFACTURA_NO = New Global.System.Data.DataColumn("FACTURA_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnFACTURA_NO)
                Me.columnFECHA_FACTURA = New Global.System.Data.DataColumn("FECHA_FACTURA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnFECHA_FACTURA)
                Me.columnCONTROL_NO = New Global.System.Data.DataColumn("CONTROL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCONTROL_NO)
                Me.columnFECHA_INGRESO = New Global.System.Data.DataColumn("FECHA_INGRESO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnFECHA_INGRESO)
                Me.columnPROVEEDOR_CLAVE = New Global.System.Data.DataColumn("PROVEEDOR_CLAVE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPROVEEDOR_CLAVE)
                Me.columnPROVEEDOR_NOMBRE = New Global.System.Data.DataColumn("PROVEEDOR_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPROVEEDOR_NOMBRE)
                Me.columnCONCEPTO = New Global.System.Data.DataColumn("CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCONCEPTO)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMBARQUE_CLAVE}, true))
                Me.columnEMBARQUE_CLAVE.AllowDBNull = false
                Me.columnEMBARQUE_CLAVE.Unique = true
                Me.columnEMBARQUE_CLAVE.MaxLength = 35
                Me.columnMMP_FOLIO.AllowDBNull = false
                Me.columnMMP_FECHA.AllowDBNull = false
                Me.columnPAIS_CLAVE.AllowDBNull = false
                Me.columnSUC_CLAVE.AllowDBNull = false
                Me.columnSAP_FISCAL_YEAR.AllowDBNull = false
                Me.columnSAP_PERIOD.AllowDBNull = false
                Me.columnSAP_PERIOD.MaxLength = 3
                Me.columnMOV_CLAVE.AllowDBNull = false
                Me.columnSTATUS.AllowDBNull = false
                Me.columnSTATUS.MaxLength = 1
                Me.columnFACTURA_NO.MaxLength = 20
                Me.columnCONTROL_NO.MaxLength = 22
                Me.columnPROVEEDOR_NOMBRE.MaxLength = 30
                Me.columnCONCEPTO.MaxLength = 50
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function NewEMBARQUESRow() As EMBARQUESRow
                Return CType(Me.NewRow,EMBARQUESRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New EMBARQUESRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(EMBARQUESRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.EMBARQUESRowChangedEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESRowChanged(Me, New EMBARQUESRowChangeEvent(CType(e.Row,EMBARQUESRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.EMBARQUESRowChangingEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESRowChanging(Me, New EMBARQUESRowChangeEvent(CType(e.Row,EMBARQUESRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.EMBARQUESRowDeletedEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESRowDeleted(Me, New EMBARQUESRowChangeEvent(CType(e.Row,EMBARQUESRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.EMBARQUESRowDeletingEvent) Is Nothing) Then
                    RaiseEvent EMBARQUESRowDeleting(Me, New EMBARQUESRowChangeEvent(CType(e.Row,EMBARQUESRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub RemoveEMBARQUESRow(ByVal row As EMBARQUESRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As EmbarquesData = New EmbarquesData()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "EMBARQUESDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class PERIODOACTUALRow
            Inherits Global.System.Data.DataRow
            
            Private tablePERIODOACTUAL As PERIODOACTUALDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tablePERIODOACTUAL = CType(Me.Table,PERIODOACTUALDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PAIS_CLAVE() As Decimal
                Get
                    Return CType(Me(Me.tablePERIODOACTUAL.PAIS_CLAVEColumn),Decimal)
                End Get
                Set
                    Me(Me.tablePERIODOACTUAL.PAIS_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PERIODO_ANTERIOR() As String
                Get
                    Return CType(Me(Me.tablePERIODOACTUAL.PERIODO_ANTERIORColumn),String)
                End Get
                Set
                    Me(Me.tablePERIODOACTUAL.PERIODO_ANTERIORColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property FISCALYEAR_ANTERIOR() As Short
                Get
                    Return CType(Me(Me.tablePERIODOACTUAL.FISCALYEAR_ANTERIORColumn),Short)
                End Get
                Set
                    Me(Me.tablePERIODOACTUAL.FISCALYEAR_ANTERIORColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property FECHA_CIERRE() As Date
                Get
                    Return CType(Me(Me.tablePERIODOACTUAL.FECHA_CIERREColumn),Date)
                End Get
                Set
                    Me(Me.tablePERIODOACTUAL.FECHA_CIERREColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PERIODO() As String
                Get
                    Return CType(Me(Me.tablePERIODOACTUAL.PERIODOColumn),String)
                End Get
                Set
                    Me(Me.tablePERIODOACTUAL.PERIODOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property FISCAL_YEAR() As Short
                Get
                    Return CType(Me(Me.tablePERIODOACTUAL.FISCAL_YEARColumn),Short)
                End Get
                Set
                    Me(Me.tablePERIODOACTUAL.FISCAL_YEARColumn) = value
                End Set
            End Property
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class EMBARQUESDETALLESRow
            Inherits Global.System.Data.DataRow
            
            Private tableEMBARQUESDETALLES As EMBARQUESDETALLESDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableEMBARQUESDETALLES = CType(Me.Table,EMBARQUESDETALLESDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property EMBARQUE_CLAVE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.EMBARQUE_CLAVEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'EMBARQUE_CLAVE' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.EMBARQUE_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PRO_CLAVE() As String
                Get
                    Return CType(Me(Me.tableEMBARQUESDETALLES.PRO_CLAVEColumn),String)
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.PRO_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PRO_GRAMAJ() As Decimal
                Get
                    Return CType(Me(Me.tableEMBARQUESDETALLES.PRO_GRAMAJColumn),Decimal)
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.PRO_GRAMAJColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PRO_DESCRI() As String
                Get
                    Return CType(Me(Me.tableEMBARQUESDETALLES.PRO_DESCRIColumn),String)
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.PRO_DESCRIColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DMP_CANTID() As Decimal
                Get
                    Return CType(Me(Me.tableEMBARQUESDETALLES.DMP_CANTIDColumn),Decimal)
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.DMP_CANTIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DMP_PRECIO() As Decimal
                Get
                    Return CType(Me(Me.tableEMBARQUESDETALLES.DMP_PRECIOColumn),Decimal)
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.DMP_PRECIOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SAP_NUM_MATERIAL_LEGADO() As String
                Get
                    Return CType(Me(Me.tableEMBARQUESDETALLES.SAP_NUM_MATERIAL_LEGADOColumn),String)
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.SAP_NUM_MATERIAL_LEGADOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PFOB() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.PFOBColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PFOB' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.PFOBColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property AVG_FLETE() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.AVG_FLETEColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'AVG_FLETE' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.AVG_FLETEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property AVG_SEGUROS() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.AVG_SEGUROSColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'AVG_SEGUROS' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.AVG_SEGUROSColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property AVG_OG() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.AVG_OGColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'AVG_OG' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.AVG_OGColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property KILOS() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.KILOSColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'KILOS' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.KILOSColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ML_FPU() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.ML_FPUColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ML_FPU' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.ML_FPUColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ML_CIF() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.ML_CIFColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ML_CIF' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.ML_CIFColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ML_ARANCEL() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.ML_ARANCELColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ML_ARANCEL' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.ML_ARANCELColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ML_FLETE() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.ML_FLETEColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ML_FLETE' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.ML_FLETEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ML_HONORARIOS() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.ML_HONORARIOSColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ML_HONORARIOS' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.ML_HONORARIOSColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ML_VARIOS() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.ML_VARIOSColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ML_VARIOS' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.ML_VARIOSColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ML_TOTAL() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.ML_TOTALColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ML_TOTAL' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.ML_TOTALColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ML_PU() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.ML_PUColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ML_PU' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.ML_PUColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ML_CU() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.ML_CUColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ML_CU' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.ML_CUColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property TotalFactura() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.TotalFacturaColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TotalFactura' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.TotalFacturaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CU() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESDETALLES.CUColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CU' in table 'EMBARQUESDETALLES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESDETALLES.CUColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsEMBARQUE_CLAVENull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.EMBARQUE_CLAVEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetEMBARQUE_CLAVENull()
                Me(Me.tableEMBARQUESDETALLES.EMBARQUE_CLAVEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPFOBNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.PFOBColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPFOBNull()
                Me(Me.tableEMBARQUESDETALLES.PFOBColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsAVG_FLETENull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.AVG_FLETEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetAVG_FLETENull()
                Me(Me.tableEMBARQUESDETALLES.AVG_FLETEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsAVG_SEGUROSNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.AVG_SEGUROSColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetAVG_SEGUROSNull()
                Me(Me.tableEMBARQUESDETALLES.AVG_SEGUROSColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsAVG_OGNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.AVG_OGColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetAVG_OGNull()
                Me(Me.tableEMBARQUESDETALLES.AVG_OGColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsKILOSNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.KILOSColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetKILOSNull()
                Me(Me.tableEMBARQUESDETALLES.KILOSColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsML_FPUNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.ML_FPUColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetML_FPUNull()
                Me(Me.tableEMBARQUESDETALLES.ML_FPUColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsML_CIFNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.ML_CIFColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetML_CIFNull()
                Me(Me.tableEMBARQUESDETALLES.ML_CIFColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsML_ARANCELNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.ML_ARANCELColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetML_ARANCELNull()
                Me(Me.tableEMBARQUESDETALLES.ML_ARANCELColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsML_FLETENull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.ML_FLETEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetML_FLETENull()
                Me(Me.tableEMBARQUESDETALLES.ML_FLETEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsML_HONORARIOSNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.ML_HONORARIOSColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetML_HONORARIOSNull()
                Me(Me.tableEMBARQUESDETALLES.ML_HONORARIOSColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsML_VARIOSNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.ML_VARIOSColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetML_VARIOSNull()
                Me(Me.tableEMBARQUESDETALLES.ML_VARIOSColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsML_TOTALNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.ML_TOTALColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetML_TOTALNull()
                Me(Me.tableEMBARQUESDETALLES.ML_TOTALColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsML_PUNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.ML_PUColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetML_PUNull()
                Me(Me.tableEMBARQUESDETALLES.ML_PUColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsML_CUNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.ML_CUColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetML_CUNull()
                Me(Me.tableEMBARQUESDETALLES.ML_CUColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsTotalFacturaNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.TotalFacturaColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetTotalFacturaNull()
                Me(Me.tableEMBARQUESDETALLES.TotalFacturaColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCUNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESDETALLES.CUColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCUNull()
                Me(Me.tableEMBARQUESDETALLES.CUColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class EMBARQUESGASTOSRow
            Inherits Global.System.Data.DataRow
            
            Private tableEMBARQUESGASTOS As EMBARQUESGASTOSDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableEMBARQUESGASTOS = CType(Me.Table,EMBARQUESGASTOSDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property EMBARQUE_CLAVE() As String
                Get
                    Return CType(Me(Me.tableEMBARQUESGASTOS.EMBARQUE_CLAVEColumn),String)
                End Get
                Set
                    Me(Me.tableEMBARQUESGASTOS.EMBARQUE_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property G_CLAVE() As Decimal
                Get
                    Return CType(Me(Me.tableEMBARQUESGASTOS.G_CLAVEColumn),Decimal)
                End Get
                Set
                    Me(Me.tableEMBARQUESGASTOS.G_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MONTO() As Decimal
                Get
                    Return CType(Me(Me.tableEMBARQUESGASTOS.MONTOColumn),Decimal)
                End Get
                Set
                    Me(Me.tableEMBARQUESGASTOS.MONTOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property NOMBRE() As String
                Get
                    Return CType(Me(Me.tableEMBARQUESGASTOS.NOMBREColumn),String)
                End Get
                Set
                    Me(Me.tableEMBARQUESGASTOS.NOMBREColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property NIVEL() As Short
                Get
                    Return CType(Me(Me.tableEMBARQUESGASTOS.NIVELColumn),Short)
                End Get
                Set
                    Me(Me.tableEMBARQUESGASTOS.NIVELColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property TIPO() As Short
                Get
                    Return CType(Me(Me.tableEMBARQUESGASTOS.TIPOColumn),Short)
                End Get
                Set
                    Me(Me.tableEMBARQUESGASTOS.TIPOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CLASE() As Decimal
                Get
                    Return CType(Me(Me.tableEMBARQUESGASTOS.CLASEColumn),Decimal)
                End Get
                Set
                    Me(Me.tableEMBARQUESGASTOS.CLASEColumn) = value
                End Set
            End Property
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class EMBARQUESORIGENRow
            Inherits Global.System.Data.DataRow
            
            Private tableEMBARQUESORIGEN As EMBARQUESORIGENDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableEMBARQUESORIGEN = CType(Me.Table,EMBARQUESORIGENDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MMP_FOLIO() As Long
                Get
                    Return CType(Me(Me.tableEMBARQUESORIGEN.MMP_FOLIOColumn),Long)
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.MMP_FOLIOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SUC_CLAVE() As Long
                Get
                    Return CType(Me(Me.tableEMBARQUESORIGEN.SUC_CLAVEColumn),Long)
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.SUC_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MOV_CLAVE() As Long
                Get
                    Return CType(Me(Me.tableEMBARQUESORIGEN.MOV_CLAVEColumn),Long)
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.MOV_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MMP_FECHA() As Date
                Get
                    Return CType(Me(Me.tableEMBARQUESORIGEN.MMP_FECHAColumn),Date)
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.MMP_FECHAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PRO_CLAVE() As String
                Get
                    Return CType(Me(Me.tableEMBARQUESORIGEN.PRO_CLAVEColumn),String)
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.PRO_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PRO_DESCRI() As String
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESORIGEN.PRO_DESCRIColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PRO_DESCRI' in table 'EMBARQUESORIGEN' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.PRO_DESCRIColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PRO_GRAMAJ() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESORIGEN.PRO_GRAMAJColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PRO_GRAMAJ' in table 'EMBARQUESORIGEN' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.PRO_GRAMAJColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PAIS_CLAVE() As Long
                Get
                    Return CType(Me(Me.tableEMBARQUESORIGEN.PAIS_CLAVEColumn),Long)
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.PAIS_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DMP_CANTID() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESORIGEN.DMP_CANTIDColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'DMP_CANTID' in table 'EMBARQUESORIGEN' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.DMP_CANTIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DMP_PRECIO() As Double
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESORIGEN.DMP_PRECIOColumn),Double)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'DMP_PRECIO' in table 'EMBARQUESORIGEN' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.DMP_PRECIOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PRO_UNIVEN() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESORIGEN.PRO_UNIVENColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PRO_UNIVEN' in table 'EMBARQUESORIGEN' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.PRO_UNIVENColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PRO_UNIMAN() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESORIGEN.PRO_UNIMANColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PRO_UNIMAN' in table 'EMBARQUESORIGEN' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.PRO_UNIMANColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PSU_CLAVE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESORIGEN.PSU_CLAVEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PSU_CLAVE' in table 'EMBARQUESORIGEN' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.PSU_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MMP_NUMCON() As String
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESORIGEN.MMP_NUMCONColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MMP_NUMCON' in table 'EMBARQUESORIGEN' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.MMP_NUMCONColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MMP_CONCEP() As String
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUESORIGEN.MMP_CONCEPColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MMP_CONCEP' in table 'EMBARQUESORIGEN' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.MMP_CONCEPColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property EMBARQUE_CLAVE() As String
                Get
                    If Me.IsEMBARQUE_CLAVENull Then
                        Return String.Empty
                    Else
                        Return CType(Me(Me.tableEMBARQUESORIGEN.EMBARQUE_CLAVEColumn),String)
                    End If
                End Get
                Set
                    Me(Me.tableEMBARQUESORIGEN.EMBARQUE_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPRO_DESCRINull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESORIGEN.PRO_DESCRIColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPRO_DESCRINull()
                Me(Me.tableEMBARQUESORIGEN.PRO_DESCRIColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPRO_GRAMAJNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESORIGEN.PRO_GRAMAJColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPRO_GRAMAJNull()
                Me(Me.tableEMBARQUESORIGEN.PRO_GRAMAJColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsDMP_CANTIDNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESORIGEN.DMP_CANTIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetDMP_CANTIDNull()
                Me(Me.tableEMBARQUESORIGEN.DMP_CANTIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsDMP_PRECIONull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESORIGEN.DMP_PRECIOColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetDMP_PRECIONull()
                Me(Me.tableEMBARQUESORIGEN.DMP_PRECIOColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPRO_UNIVENNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESORIGEN.PRO_UNIVENColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPRO_UNIVENNull()
                Me(Me.tableEMBARQUESORIGEN.PRO_UNIVENColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPRO_UNIMANNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESORIGEN.PRO_UNIMANColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPRO_UNIMANNull()
                Me(Me.tableEMBARQUESORIGEN.PRO_UNIMANColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPSU_CLAVENull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESORIGEN.PSU_CLAVEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPSU_CLAVENull()
                Me(Me.tableEMBARQUESORIGEN.PSU_CLAVEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsMMP_NUMCONNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESORIGEN.MMP_NUMCONColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetMMP_NUMCONNull()
                Me(Me.tableEMBARQUESORIGEN.MMP_NUMCONColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsMMP_CONCEPNull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESORIGEN.MMP_CONCEPColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetMMP_CONCEPNull()
                Me(Me.tableEMBARQUESORIGEN.MMP_CONCEPColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsEMBARQUE_CLAVENull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUESORIGEN.EMBARQUE_CLAVEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetEMBARQUE_CLAVENull()
                Me(Me.tableEMBARQUESORIGEN.EMBARQUE_CLAVEColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class EMBARQUESRow
            Inherits Global.System.Data.DataRow
            
            Private tableEMBARQUES As EMBARQUESDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableEMBARQUES = CType(Me.Table,EMBARQUESDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property EMBARQUE_CLAVE() As String
                Get
                    Return CType(Me(Me.tableEMBARQUES.EMBARQUE_CLAVEColumn),String)
                End Get
                Set
                    Me(Me.tableEMBARQUES.EMBARQUE_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MMP_FOLIO() As Decimal
                Get
                    Return CType(Me(Me.tableEMBARQUES.MMP_FOLIOColumn),Decimal)
                End Get
                Set
                    Me(Me.tableEMBARQUES.MMP_FOLIOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MMP_FECHA() As Date
                Get
                    Return CType(Me(Me.tableEMBARQUES.MMP_FECHAColumn),Date)
                End Get
                Set
                    Me(Me.tableEMBARQUES.MMP_FECHAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PAIS_CLAVE() As Decimal
                Get
                    Return CType(Me(Me.tableEMBARQUES.PAIS_CLAVEColumn),Decimal)
                End Get
                Set
                    Me(Me.tableEMBARQUES.PAIS_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SUC_CLAVE() As Decimal
                Get
                    Return CType(Me(Me.tableEMBARQUES.SUC_CLAVEColumn),Decimal)
                End Get
                Set
                    Me(Me.tableEMBARQUES.SUC_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SAP_FISCAL_YEAR() As Decimal
                Get
                    Return CType(Me(Me.tableEMBARQUES.SAP_FISCAL_YEARColumn),Decimal)
                End Get
                Set
                    Me(Me.tableEMBARQUES.SAP_FISCAL_YEARColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SAP_PERIOD() As String
                Get
                    Return CType(Me(Me.tableEMBARQUES.SAP_PERIODColumn),String)
                End Get
                Set
                    Me(Me.tableEMBARQUES.SAP_PERIODColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MOV_CLAVE() As Decimal
                Get
                    Return CType(Me(Me.tableEMBARQUES.MOV_CLAVEColumn),Decimal)
                End Get
                Set
                    Me(Me.tableEMBARQUES.MOV_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property STATUS() As String
                Get
                    Return CType(Me(Me.tableEMBARQUES.STATUSColumn),String)
                End Get
                Set
                    Me(Me.tableEMBARQUES.STATUSColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property TIPO_CAMBIO() As Double
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUES.TIPO_CAMBIOColumn),Double)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TIPO_CAMBIO' in table 'EMBARQUES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUES.TIPO_CAMBIOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property FACTURA_NO() As String
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUES.FACTURA_NOColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'FACTURA_NO' in table 'EMBARQUES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUES.FACTURA_NOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property FECHA_FACTURA() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUES.FECHA_FACTURAColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_FACTURA' in table 'EMBARQUES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUES.FECHA_FACTURAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CONTROL_NO() As String
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUES.CONTROL_NOColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CONTROL_NO' in table 'EMBARQUES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUES.CONTROL_NOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property FECHA_INGRESO() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUES.FECHA_INGRESOColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_INGRESO' in table 'EMBARQUES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUES.FECHA_INGRESOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PROVEEDOR_CLAVE() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUES.PROVEEDOR_CLAVEColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PROVEEDOR_CLAVE' in table 'EMBARQUES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUES.PROVEEDOR_CLAVEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PROVEEDOR_NOMBRE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUES.PROVEEDOR_NOMBREColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PROVEEDOR_NOMBRE' in table 'EMBARQUES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUES.PROVEEDOR_NOMBREColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CONCEPTO() As String
                Get
                    Try 
                        Return CType(Me(Me.tableEMBARQUES.CONCEPTOColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CONCEPTO' in table 'EMBARQUES' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableEMBARQUES.CONCEPTOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsTIPO_CAMBIONull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUES.TIPO_CAMBIOColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetTIPO_CAMBIONull()
                Me(Me.tableEMBARQUES.TIPO_CAMBIOColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsFACTURA_NONull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUES.FACTURA_NOColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetFACTURA_NONull()
                Me(Me.tableEMBARQUES.FACTURA_NOColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsFECHA_FACTURANull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUES.FECHA_FACTURAColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetFECHA_FACTURANull()
                Me(Me.tableEMBARQUES.FECHA_FACTURAColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCONTROL_NONull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUES.CONTROL_NOColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCONTROL_NONull()
                Me(Me.tableEMBARQUES.CONTROL_NOColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsFECHA_INGRESONull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUES.FECHA_INGRESOColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetFECHA_INGRESONull()
                Me(Me.tableEMBARQUES.FECHA_INGRESOColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPROVEEDOR_CLAVENull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUES.PROVEEDOR_CLAVEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPROVEEDOR_CLAVENull()
                Me(Me.tableEMBARQUES.PROVEEDOR_CLAVEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPROVEEDOR_NOMBRENull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUES.PROVEEDOR_NOMBREColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPROVEEDOR_NOMBRENull()
                Me(Me.tableEMBARQUES.PROVEEDOR_NOMBREColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCONCEPTONull() As Boolean
                Return Me.IsNull(Me.tableEMBARQUES.CONCEPTOColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCONCEPTONull()
                Me(Me.tableEMBARQUES.CONCEPTOColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Class PERIODOACTUALRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As PERIODOACTUALRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New(ByVal row As PERIODOACTUALRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Row() As PERIODOACTUALRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Class EMBARQUESDETALLESRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As EMBARQUESDETALLESRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New(ByVal row As EMBARQUESDETALLESRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Row() As EMBARQUESDETALLESRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Class EMBARQUESGASTOSRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As EMBARQUESGASTOSRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New(ByVal row As EMBARQUESGASTOSRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Row() As EMBARQUESGASTOSRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Class EMBARQUESORIGENRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As EMBARQUESORIGENRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New(ByVal row As EMBARQUESORIGENRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Row() As EMBARQUESORIGENRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Class EMBARQUESRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As EMBARQUESRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New(ByVal row As EMBARQUESRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Row() As EMBARQUESRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
End Namespace
